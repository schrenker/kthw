---
- name: Fetch kube-apiserver to /usr/local/bin
  get_url:
    url: "{{ item }}"
    dest: /usr/local/bin
    mode: '755'
    owner: root
    group: root
  with_items:
    - "{{ base_url }}/kube-apiserver"
    - "{{ base_url }}/kube-controller-manager"
    - "{{ base_url }}/kube-scheduler"
    - "{{ base_url }}/kubectl"
  become: true

- name: Create necessary directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0700'
  become: true
  with_items:
    - /etc/kubernetes
    - /etc/kubernetes/config
    - /var/lib/kubernetes

- name: Copy certificates, configs and keys to /var/lib/kubernetes
  copy:
    src: "{{ home }}/{{ item }}"
    dest: /var/lib/kubernetes
    owner: root
    group: root
    mode: '0600'
    remote_src: true
  with_items:
    - ca.pem
    - ca-key.pem
    - kubernetes.pem
    - kubernetes-key.pem
    - service-account.pem
    - service-account-key.pem
    - encryption-config.yaml
    - kube-controller-manager.kubeconfig
    - kube-scheduler.kubeconfig
  become: true

- name: Copy config to /etc/kubernetes/config
  copy:
    src: kube-scheduler.yaml
    dest: /etc/kubernetes/config
    owner: root
    group: root
    mode: '0600'
  become: true

- name: Get etcd peers string
  script: ../scripts/etcd_peers.py "../inventory" "controller" "2379" 0
  register: etcd_peers
  delegate_to: localhost
  run_once: true

- name: Copy kube-apiserver systemd service
  template:
    src: kube-apiserver.service.j2
    dest: /etc/systemd/system/kube-apiserver.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Copy kube-controller-manager systemd service
  template:
    src: kube-controller-manager.service.j2
    dest: /etc/systemd/system/kube-controller-manager.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Copy kube-scheduler systemd service
  copy:
    src: kube-scheduler.service
    dest: /etc/systemd/system/kube-scheduler.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Start and enable kube-apiserver, kube-controller-manager, kube-scheduler
  systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    daemon_reload: true
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
  become: true
...
