---
- name: Generate kubeconfig for worker nodes
  include_tasks: worker.yml
  vars:
    worker: "{{item}}"
  with_items: "{{ groups.worker }}"

- name: Generate kube-proxy config file
  shell:
    cmd: >
      kubectl config set-cluster kubernetes-the-hard-way
      --certificate-authority=ca.pem
      --embed-certs=true
      --server=https://{{ loadbalancer_ip }}:6443
      --kubeconfig=kube-proxy.kubeconfig

      kubectl config set-credentials system:kube-proxy
      --client-certificate=kube-proxy.pem
      --client-key=kube-proxy-key.pem
      --embed-certs=true
      --kubeconfig=kube-proxy.kubeconfig

      kubectl config set-context default
      --cluster=kubernetes-the-hard-way
      --user=system:kube-proxy
      --kubeconfig=kube-proxy.kubeconfig

      kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
    chdir: /tmp
    creates: kube-proxy.kubeconfig

- name: Generate kube-controller-manager config file
  shell:
    cmd: >
      kubectl config set-cluster kubernetes-the-hard-way
      --certificate-authority=ca.pem
      --embed-certs=true
      --server=https://127.0.0.1:6443
      --kubeconfig=kube-controller-manager.kubeconfig

      kubectl config set-credentials system:kube-controller-manager
      --client-certificate=kube-controller-manager.pem
      --client-key=kube-controller-manager-key.pem
      --embed-certs=true
      --kubeconfig=kube-controller-manager.kubeconfig

      kubectl config set-context default
      --cluster=kubernetes-the-hard-way
      --user=system:kube-controller-manager
      --kubeconfig=kube-controller-manager.kubeconfig

      kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig
    chdir: /tmp
    creates: kube-controller-manager.kubeconfig

- name: Generate kube-scheduler config file
  shell:
    cmd: >
      kubectl config set-cluster kubernetes-the-hard-way
      --certificate-authority=ca.pem
      --embed-certs=true
      --server=https://127.0.0.1:6443
      --kubeconfig=kube-scheduler.kubeconfig

      kubectl config set-credentials system:kube-scheduler
      --client-certificate=kube-scheduler.pem
      --client-key=kube-scheduler-key.pem
      --embed-certs=true
      --kubeconfig=kube-scheduler.kubeconfig

      kubectl config set-context default
      --cluster=kubernetes-the-hard-way
      --user=system:kube-scheduler
      --kubeconfig=kube-scheduler.kubeconfig

      kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig
    chdir: /tmp
    creates: kube-scheduler.kubeconfig

- name: Generate {{ username }} config file
  shell:
    cmd: >
      kubectl config set-cluster kubernetes-the-hard-way
      --certificate-authority=ca.pem
      --embed-certs=true
      --server=https://127.0.0.1:6443
      --kubeconfig={{ username }}.kubeconfig

      kubectl config set-credentials {{ username }}
      --client-certificate={{ username }}.pem
      --client-key={{ username }}-key.pem
      --embed-certs=true
      --kubeconfig={{ username }}.kubeconfig

      kubectl config set-context default
      --cluster=kubernetes-the-hard-way
      --user={{ username }}
      --kubeconfig={{ username }}.kubeconfig

      kubectl config use-context default --kubeconfig={{ username }}.kubeconfig
    chdir: /tmp
    creates: "{{ username }}.kubeconfig"


- name: Generate kubeconfig for remote kubectl
  shell:
    cmd: >
      kubectl config set-cluster kubernetes-the-hard-way
      --certificate-authority=ca.pem
      --embed-certs=true
      --server=https://{{ loadbalancer_ip }}:6443

      kubectl config set-credentials {{ username }}
      --client-certificate={{ username }}.pem
      --client-key={{ username }}-key.pem

      kubectl config set-context kubernetes-the-hard-way
      --cluster=kubernetes-the-hard-way
      --user={{ username }}

      kubectl config use-context kubernetes-the-hard-way
    chdir: /tmp
  changed_when: false

- name: Generate encryption key
  set_fact:
    encryption_key: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters') | b64encode }}"
  changed_when: false

- name: Generate encryption config file
  template:
    src: encryption-config.yaml.j2
    dest: /tmp/encryption-config.yaml
    force: false
...
